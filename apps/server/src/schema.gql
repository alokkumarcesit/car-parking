# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: Float!
  name: String!
  email: String
  role: String!
  phone: Float
  isActive: Boolean!
  created_at: DateTime!
  updated_at: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Car {
  id: Float!
  vehical_number: String!
  color: String!
  car_type: String
  created_at: DateTime!
  updated_at: DateTime!
}

type Parking {
  id: Float!
  locationCode: String!
  location_details: String!
  lotSize: Float!
  owners: User!
  created_at: DateTime!
  updated_at: DateTime!
}

type CarType {
  id: Float!
  type: String!
  created_at: DateTime
  updated_at: DateTime
}

type ParkingFee {
  id: Float!
  car_type: CarType!
  first_charge: Float!
  second_charge: Float!
  created_at: DateTime!
  updated_at: DateTime!
}

type SearchResult {
  owner: [User!]
  slot: [Parking!]
  car: [Car!]
}

type Query {
  users: [User!]!
  user(id: Int!): User!
  cars: [Car!]!
  car(id: Int!): Car!
  parkings: [Parking!]!
  parking(id: Int!): Parking!
  carTypes: [CarType!]!
  carType(id: Int!): CarType!
  parkingFees: [ParkingFee!]!
  parkingFee(id: Int!): ParkingFee!
  search(searchInput: SearchInput!): SearchResult!
}

input SearchInput {
  owner_name: String
  owner_role: String
  owner_phone: Float
  vehical_number: String
  color: String
  car_type: String
  locationCode: String
  lotSize: Float
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  update(email: String!, updateUserInput: UpdateUserInput!): User!
  createCar(createCarInput: CreateCarInput!): Car!
  createParking(createParkingInput: CreateParkingInput!): Parking!
  updateParking(updateParkingInput: UpdateParkingInput!): Parking!
  removeParking(id: Int!): Parking!
  createCarType(createCarTypeInput: CreateCarTypeInput!): CarType!
  updateCarType(updateCarTypeInput: UpdateCarTypeInput!): CarType!
  removeCarType(id: Int!): CarType!
  createParkingFee(createParkingFeeInput: CreateParkingFeeInput!): ParkingFee!
  updateParkingFee(updateParkingFeeInput: UpdateParkingFeeInput!): ParkingFee!
  removeParkingFee(id: Int!): ParkingFee!
}

input CreateUserInput {
  phone: Float
  name: String!
  email: String
  password: String
}

input UpdateUserInput {
  phone: Float
  name: String
  email: String
  password: String
  id: Int
}

input CreateCarInput {
  vehical_number: String!
  color: String!
  car_type: String!
}

input CreateParkingInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateParkingInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateCarTypeInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateCarTypeInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateParkingFeeInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateParkingFeeInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}